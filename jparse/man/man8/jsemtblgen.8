.\" section 8 man page for jsemtblgen
.\"
.\" This man page was first written by Cody Boone Ferguson for the IOCCC
.\" in 2022.
.\"
.\" Humour impairment is not virtue nor is it a vice, it's just plain
.\" wrong: almost as wrong as JSON spec mis-features and C++ obfuscation! :-)
.\"
.\" "Share and Enjoy!"
.\"     --  Sirius Cybernetics Corporation Complaints Division, JSON spec department. :-)
.\"
.TH jsemtblgen 8 "26 January 2023" "jsemtblgen" "jparse tools"
.SH NAME
.B jsemtblgen
\- generate JSON semantics table
.SH SYNOPSIS
.B jsemtblgen
.RB [\| \-h \|]
.RB [\| \-v
.IR level \|]
.RB [\| \-J
.IR level \|]
.RB [\| \-q \|]
.RB [\| \-V \|]
.RB [\| \-s \|]
.RB [\| \-I \|]
.RB [\| \-N
.IR name \|]
.RB [\| \-D
.IR def_func \|]
.RB [\| \-P
.IR prefix \|]
.RB [\| \-1
.IR func \|]
.RB [\| \-S
.IR func \|]
.RB [\| \-B
.IR func \|]
.RB [\| \-0
.IR func \|]
.RB [\| \-M
.IR func \|]
.RB [\| \-O
.IR func \|]
.RB [\| \-A
.IR func \|]
.RB [\| \-U
.IR func \|]
.I json_arg
.SH DESCRIPTION
This tool creates JSON semantics tables.
JSON semantics tables allow for semantic tests on valid JSON such as testing counts of JSON objects at various depths and testing values of JSON objects as well as testing relationships between values of JSON objects.
.PP
In general, a JSON semantics table is an array of \fBstruct json_sem\fP that can be used to drive checks on the semantics of valid JSON.
This can be done for any JSON file.
.PP
If the \fB-s\fP option is used the \fIjson_arg\fP is a string.
Otherwise it is assumed to be a file.
.SH OPTIONS
.TP
.B \-h
print help and exit.
.TP
.BI \-v\  level
set verbosity level to
.I level\c
\&.
.TP
.BI \-J\  level
set JSON verbosity level to
.I level\c
\&.
.TP
.B \-q
set quiet mode.
.TP
.B \-V
print version and exit.
.TP
.B \-s
specify that arg is a string to be processed rather than a file.
.TP
.B \-I
output as a C header file.
.TP
.BI \-N\  name
set name of the semantics table.
.TP
.BI \-D\  def_func
validate with
.I def_func()
unless overridden by another flag.
.TP
.BI \-P\  prefix
validate
.B JTYPE_MEMBER
JSON nodes with
.I prefix_name()
(def: do not).
.RS
Note that the name is based on the
.B JTYPE_MEMBER
JSON decoded name string.
Underscore (_) replaces any name chars that are not valid in a C function name.
.B \-P
overrides any use of
.B \-M\c
\&.
.RE
.TP
.BI \-1\  func
validate
.B JTYPE_NUMBER
JSON nodes with
.I func()\c
\&.
.TP
.BI \-S\  func
validate 
.B JTYPE_STRING
JSON nodes with
.I func()\c
\&.
.TP
.BI \-B\  func
validate 
.B JTYPE_BOOL
JSON nodes with
.I func()\c
\&.
.TP
.BI \-0\  func
validate 
.B JTYPE_NULL
JSON nodes with
.I func()\c
\&.
.TP
.BI \-M\  func
validate 
.B JTYPE_MEMBER
JSON nodes with
.I func()\c
\&.
.TP
.BI \-O\  func
validate 
.B JTYPE_OBJECT
JSON nodes with 
.I func()\c
\&.
.TP
.BI \-A\  func
validate 
.B JTYPE_ARRAY
JSON nodes with 
.I func()\c
\&.
.TP
.BI \-U\  func
validate nodes with unknown types with
.I func()\c
\&.
.SH EXIT STATUS
.TP
0
valid JSON
.TQ
1
invalid JSON
.TQ
2
\fB\-h\fP or \fB\-V\fP used and help string or version string printed.
.TQ
3
command line error.
.TQ
>=10
internal error.
.SH NOTES
.PP
The JSON parser \fBjparse\fP was co\-developed by Cody Boone Ferguson and Landon Curt Noll (one of the IOCCC Judges) in support for IOCCCMOCK, IOCCC28 and beyond.
.SH BUGS
If you have a problem with the tool (not JSON itself! :\-) ) you can report it at the GitHub issues page.
It can be found at
.br
\fI\<https://github.com/ioccc\-src/mkiocccentry/issues\>\fP.
.SH EXAMPLE
Rather than use this tool directly one should use \fBjsemcgen(8)\fP instead.
See that man page for an example.
.SH SEE ALSO
\fBjsemcgen(8)\fP
