.TH run_bison.sh 8 "14 September 2022" "run_bison.sh" "IOCCC tools"
.SH NAME
run_bison.sh \- run bison to generate C code from a *.y file or use backup files if error
.SH SYNOPSIS
\fBrun_bison.sh\fP [\-h] [\-v level] [\-V] [\-o] [\-b bison] [\-l limit_ioccc.sh] [\-g verge] [\-p prefix] [\-s sorry.h] [\-B dir] \-\- [bison_flags]
.SH DESCRIPTION
\fBrun_bison.sh\fP attempts to find a recent enough version of bison (minimum version defined in \fIlimit_ioccc.sh\fP or file specified by \fB\-l\fP option) and use it to generate code from the \fBprefix.y\fP file.
The default prefix is \fIjparse\fP but this script can be used for other parsers as well.
If a recent enough version is not found or bison encounters an error (syntax error or anything else) and the \fB\-o\fP option is not specified, it attempts to use the backup files.
.SH OPTIONS
.PP
\fB\-h\fP
Show help and exit.
.PP
\fB\-v\fP
Set verbosity level.
.PP
\fB\-V\fP
Show version and exit.
.PP
\fB\-o\fP
Do \fBNOT\fP use backup files.
If bison cannot be used or fails to generate the files the script will fail.
.PP
\fB\-b\fP
Specify bison basename.
.PP
\fB\-l\fP
Specify path to version file.
.PP
\fB\-g\fP
Specify path to the \fBverge\fP tool.
This is used to determine if the bison tool is recent enough.
.PP
\fB\-p\fP
Specify prefix of files to use.
The bison input file will be \fIprefix.y\fP.
If the \fB\-o\fP option was not used and bison cannot be used or fails then the backup file \fIprefix.c\fP will be used.
.PP
\fB\-s\fP
File to prepend to the C output.
.PP
\fB\-B\fP
Specify a directory to search for bison in.
\fB\-B\fP can be used more than once.
If not used the script looks at \fB$PATH\fP.
.PP
The \fBbison_flags\fP are any optional flags to give to bison before the prefix.
.SH EXIT STATUS
.PP
    0	    bison output files formed or backup files used instead
.br
    1	    bison not found or too old and -o used
.br
    2	    good bison found and ran but failed to form proper output files
.br
    3	    bison input file missing or not readable:         backup file(s) had to be used
.br
    4	    backup file(s) are missing, or are not readable
.br
    5	    failed to use backup file(s) to form the bison C output file(s)
.br
    6	    limit_ioccc.sh or sorry file missing/not readable or verge missing/not executable
.br
    7	    MIN_BISON_VERSION missing or empty from limit_ioccc.sh
.br
    8	    -h and help string printed or -V and version string printed
.br
    9	    Command line usage error
.br
    >=10	internal error"
.SH NOTES
.PP
The \fB\-o\fP option is mainly for maintainers of the \fBjparse\fP parser and scanner but it can be used to test if you have a recent enough version of bison.
The idea behind it is if bison fails it might indicate a syntax error which the authors of \fBjparse\fP would need to fix.
.PP
Beware that some make implementations have a default rule for \fI*.y\fP files so that if one were to in this repo do:
.nf
.RS
\fB
 touch foo.y
 make\fP
.fi
.RE
.PP
there would be an error in using make.
Even worse is that until that file is deleted (assuming \fIfoo.y\fP is in error say because it was created by touch and is empty) make will continue to fail.
This appears to be because foo is actually referenced in the Makefile as a target.
.SH BUGS
.PP
There's no way to disable prepending a file to the generated files.
This should probably be fixed at some point.
.PP
If you any issues with the tool you can open an issue at \fI\<https://github.com/ioccc-src/mkiocccentry/issues\>\fP.
.SH EXAMPLES
.PP
Run \fBrun_bison.sh\fP with default options, which should attempt to run bison on the \fIjparse.y\fP file:
.nf
.RS
\fB
 ./run_bison.sh\fP
.fi
.RE
.PP
Run \fBrun_bison.sh\fP but specify that backup files are not to be used in case a recent enough version of bison cannot be found or fails for some reason.

.nf
.RS
\fB
 ./run_bison.sh -o\fP
.fi
.RE
.PP
Try and run bison on the file \fIfoobar.y\fP and don't use any backup files:
.nf
.RS
\fB
 ./run_bison.sh -o -p foobar\fP
.fi
.RE
.PP
Try and run bison on the file \fIfoobar.y\fP with yacc instead of bison and don't use any backup files:
.nf
.RS
\fB
 ./run_bison.sh -o -p foobar -b yacc\fP
.fi
.RE
